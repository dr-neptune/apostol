#+TITLE: The Logarithm, The Exponential, and the Inverse Trigonometric Functions

* Introduction

$u = \log_b x$ means $x = b^u$

$\log_b xy = \log_b x + \log_b y$

* Motivation for the Definition of the Natural Logarithm as an Integral

When a mathematician tries to formulate a definition of a concept, such as the logarithm, they usually have in mind a number of properties they want the concept to posess. 
By examining these properties, they are often led to a simple formula or process that might serve as a definition from which all the desired properties spring forth as logical deductions

If we think of the logarithm as a function $f$, then we want this function to have the property expressed by the formula: 

$f(xy) = f(x) + f(y)$

whenever $x, y, xy$ are in the domain of $f$. An equation like above, which expresses a relationship between the values of a function at 2 or more points, is called a *functional equation*. 
Many mathematical problems can be reduced to solving a functional equation, a solution being any function which satisfies the equation. 

* The Definition of the Logarithm. Basic Properties

** Definition : Logarithm

If $x$ is a positive real number, we define the natural logarithm of $x$, denoted temporarily by $L(x)$, to be the integral

$L(x) = \int_1^x \frac{1}{t} dt$

when $x > 1$

** Theorem 6.1

The logarithm has the following properties:

a. $L(1) = 0$
b. $L'(x) = \frac{1}{x}$ for every $x > 0$
c. $L(ab) = L(a) + L(b)$ for every $a, b > 0$

* The Graph of the Natural Logarithm

Some more properties deduced from 6.1: 

- L has a positive derivative everywhere, so it is strictly increasing on every interval
- Since L(1) = 0, the graph lies above the x axis if x > 1, and below is 0 < x < 1
- For x > 1, the slope gradually decreases toward 0 as x increases indefinitely
- For small values of x, the slope is large, and it increases without bound as x decreases towards 0
- The second derivative is $L''(x) = -\frac{1}{x^2}$, which is negative for all x, so $L$ is a concave function

* Consequences of the Functional Equation $L(ab) = L(a) + L(b)$

The logarithm is unbounded above. For every positive number $M$, there exists values of $x$ such that $L(x) > M$

This leads us to the more general formula $L(a^n) = n L(a)$ for every $n \geq 1$. 

** Theorem 6.2

For every real number $b$ there is exactly one positive real number $a$ whose logarithm $L(a) = b$

** Definition

We denote by $e$ that number for which $L(e) = 1$

Natural logarithms are also called *Napierian Logarithms*, in honor of their inventor John Napier. It is common practice to use the symbols $\ln x$ or $\log x$ instead of $L(x)$ to denote the logarithm of $x$

* Logarithms Referred to Any Positive Base $b \neq 1$

** Definition 

If $b > 0$, $b \neq 1$, and if $x > 0$, the logarithm of $x$ to the base $b$ is the number $\log_b (x) = \frac{\ln x}{\ln b}$

* Differentiation and Integration Formulas involving Logarithms

If $u = f(x)$ where $f$ has a continuous derivative, we have

$\int \frac{du}{u} = \log u + C$ or $\int \frac{f'(x)}{f(x)} dx = \log f(x) + C$

These are only valid if $u$ or $f(x)$ is positive since the logarithm is not defined for negative numbers

We can extend the range of validity of these formulas to accomodate functions that are negative or positive (but nonzero) by introducing a new function:

$L_0(x) = \log |x| = \int_1^{|x|} \frac{1}{t} dt$

$L_0(xy) = L_0(x) + L_0(y)$ for all real $x \neq 0$

$L_0'(x) = \frac{1}{x}$

If we use $L_0$ instead of $L$ in the foregoing integration formulas, we can extend their scope to include functions which assign negative values as well as positive values.

We can generalize the above as:

$\int \frac{du}{u} = \log |u| + C$ or $\int \frac{f'(x)}{f(x)} dx = \log |f(x)| + C$

* Logarithmic Differentiation

Suppose we form a composition of $L_0$ with any differentiable function $f$; say

$g(x) = L_0[f(x)] = \log |f(x)|$

for those $x \neq 0$. The chain rule yields:

$g'(x) = L_0'[f(x)]f'(x) = \frac{f'(x)}{f(x)}$

* Polynomial Approximations to the Logarithm

In this section, we show that the logarithm function can be approximated by certain polynomials which can be used to compute logarithms to any desired degree of accuracy.

** Theorem 6.3 

Let $P_n$ denote the polynomial of degree $n$ given by $P_n(x) = x + \frac{x^2}{2} + \frac{x^3}{3} + ... + \frac{x^n}{n} = \sum_{k=1}^n \frac{x^k}{k}$

Then, for every $x < 1$ and every $n \geq 1$, we have

$-\log(1-x) = P_n(x) + \int_0^x \frac{u_n}{1 - u} du$

We can also write this as $-log(1-x) = P_n(x) + E_n(x)$ where $E_n(x) = \int_0^x \frac{u_n}{1 - u}$ represents the error made when we approximate $-log(1-x)$ by the polynomial $P_n(x)$. 

To use this in computations, we need to know whether the error is positive or negative and how large it can be. The next theorem tells us that for small positive $x$ the error $E_n(x)$ is positive, but for negative $x$ the error has the same sign as $(-1)^{n + 1}$, where $n$ is the degree of the approximating polynomial. It also gives useful upper and lower bounds. 

** Theorem 6.4

If $0 < x < 1$ we have the inequalities

$\frac{x^{n + 1}}{n + 1} \leq E_n(x) \leq \frac{1}{1 - x} \frac{x^{n + 1}}{n + 1}$

If $x < 0$, the error $E_n(x)$ has the same sign as $(-1)^{n + 1}$ and we have 

$0 < (-1)^{n + 1}E_n(x) \leq \frac{|x|^{n + 1}}{n + 1}$

** Theorem 6.5

This theorem gives a formula which is admirably suited for computations of logarithms

if $0 < x < 1$ and if $m \geq 1$, we have

$\log \frac{1 + x}{1 - x} = 2(x + \frac{x^3}{3} + ... + \frac{x^{2m - 1}}{2m - 1}) + R_m(x)$

where the error term $R_m(x)$ satisfies the inequalities

$\frac{x^{2m + 1}}{2m + 1} < R_m(x) \leq \frac{2 - x}{1 - x} \frac{x^{2m + 1}}{2m + 1}$

* Exercises


#+BEGIN_SRC R
library(magrittr)

get_log_approx <- function(x, m) {
    get_rm_interval <- function() {
        o <- x^(2 * m + 1) / (2 * m + 1)
        list(o, ((2 - x) / (1 - x)) * o)
    }

    ldom <- (1 + x) / (1 - x)
    exponents <- seq(from = 1, to = 2 * m - 1, by = 2)
    main <- (x^exponents) / exponents

    log_name <- glue::glue("log({ldom})")

    list(sum(2 * main), get_rm_interval()) %>%
        set_names(c(log_name, "Error Bound"))
}

get_log_approx(1/3, 5)

get_log_form <- function(x) {
    
}

#+END_SRC
