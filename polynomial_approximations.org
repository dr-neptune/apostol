* Polynomial Approximations to Functions

  If the difference between a function and its polynomial approximation is sufficiently small, then we can, for practical purposes, compute with the polynomial in place of the original function.

  In this chapter, we shall be interested in obtaining a polynomial which agrees with f and some of its derivatives at a given point.

  We can approximate $e^x$ with tighter and tighter bounds with a polynomial which agrees with its first n terms about some point:

  $P(x) = \sum_{i = 0}^n \frac{x^i}{i!}$

* The Taylor Polynomials Generated by a Function

** Theorem 7.1 | Taylor Polynomials

   Let $f$ be a function with derivatives of order $n$ at the point $x = 0$. Then there exists one and only one polynomial $P$ of degree $\leq n$ which satisfies the $n + 1$ conditions

   $P(0) = f(0), P'(0) = f'(0), ..., P^{(n)}(0) = f^{(n)}(0)$

   This polynomial is given by the formula

   $P(x) = \sum_{k = 0}^{n} \frac{f^{(k)}(0)}{k!} x^k$

   In the same way, we may show that there is one and only one polynomial of degree $\leq n$ which agrees with $f$ and its first $n$ derivatives at a point $x = a$.

   $P(x) = \sum_{k = 0}^n \frac{f^{(k)}(a)}{k!} (x - a)^k$

   This is the one and only polynomial of degree $\leq n$ which satisfies the conditions

   $P(a) = f(a), P'(a) = f'(a), ..., P^{(n)}(a) = f^{(n)}(a)$

   and it is referred to as a **Taylor Polynomial**, or more precisely, the Taylor Polynomial of degree $n$ generated by $f$ at the point $a$.

   It is convenient to have a notation that indicates the dependence of the Taylor polynomial $P$ on $f$ and $n$. We shall indicate this by writing
   $P = T_n(f)$. The symbol $T_n$ is called the Taylor operator of degree $n$. When this operator is applied to a function, it produces a new function $T_n f$, the Taylor polynomial of degree $n$.
   The value of this function at $x$ is denoted by $T_n[f(x)]$ or $T_n f(x; a)$ if we wish to indicate the dependence on $a$.

* Calculus of Taylor Polynomials

  Sometimes the calculation of the derivatives $f^{(k)}(a)$ may become lengthy, so it is desirable to have alternative methods for determining Taylor polynomials.
  The next theorem describes properties of the Taylor operator that often enable us to obtain new Taylor polynomials from given ones.

** Theorem 7.2 | Properties of the Taylor Operator $T_n$

   a. **Linearity Property**: If $c_1, c_2$ are constants, then $T_n(c_1 f + c_2 g) = c_1 T_n(f) + c_2 T_n(g)$
   b. **Differentiation Property**: The derivative of a Taylor polynomial of $f$ is a Taylor polynomial of $f'$. In fact, we have $(T_n f)' = T_{n - 1}(f')$
   c. **Integration Property**: An indefinite integral of a Taylor polynomial of $f$ is a Taylor polynomial of an indefinite integral of $f$. More precisely, if $g(x) = \int_a^x f(t) dt$, then $T_{n + 1} g(x) = \int_a^x T_n f(t) dt$
    
** Theorem 7.3 | Substitution Property

   Let $g(x) = f(cx)$, where $c$ is a constant. Then we have
   $T_n g(x; a) = T_n f(cx; ca)$

   In particular, when $a = 0$, we have $T_n g(x) = T_n f(cx)$

** Theorem 7.4 | Taylor Polynomial Generated by $f$ at 0

   Let $P_n$ be a polynomial of degree $n \geq 1$. Let $f$ and $g$ be two functions with derivatives of order $n$ at 0 and assume that $f(x) = P_n(x) + x^n g(x)$, where $g(x) \to 0$ as $x \to 0$. Then $P_n$ is the Taylor polynomial generated by $f$ at 0.

** Exercises
   
#+BEGIN_SRC R
tibble("x" = seq(from = -5, 5, .01)) %>%
    mutate(y = funk(x),
           sin = sin(x),
           cos = cos(x),
           zero_pt = ifelse(between(y, -0.1, 0.1), TRUE, FALSE)) -> datum

datum %>%
    ggplot() +
    geom_hline(yintercept = 0, color = "gray") +
    geom_point(data = filter(datum, zero_pt), aes(x = x, y = 0), shape = 1) +
    geom_line(aes(x = x, y = (x - (x^3 / factorial(3)))), color = "lightblue") +
    geom_line(aes(x = x, y = (x - (x^3 / factorial(3)) + (x^5 / factorial(5)))), color = "forestgreen") +
    geom_line(aes(x = x, y = (x - (x^3 / factorial(3)) + (x^5 / factorial(5)) - (x^7 / factorial(7)))), color = "red") +
    geom_line(aes(x = x, y = (x - (x^3 / factorial(3)) + (x^5 / factorial(5)) - (x^7 / factorial(7)) + (x^9 / factorial(9)))), color = "orange") +
    geom_line(aes(x = x, y = sin), color = "mediumpurple") +
    ylab("Polynomial Approximations to sin(x)") +
    xlab("x")

datum %>%
    ggplot() +
    geom_hline(yintercept = 0, color = "gray") +
    geom_line(aes(x = x, y = (1 - (x^2 / factorial(2)))), color = "lightblue") +
    geom_line(aes(x = x, y = (1 - (x^2 / factorial(2)) + (x^4 / factorial(4)))), color = "forestgreen") +
    geom_line(aes(x = x, y = (1 - (x^2 / factorial(2)) + (x^4 / factorial(4)) - (x^6 / factorial(6)))), color = "red") +
    geom_line(aes(x = x, y = (1 - (x^2 / factorial(2)) + (x^4 / factorial(4)) - (x^6 / factorial(6)) + (x^8 / factorial(8)))), color = "orange") +
    geom_line(aes(x = x, y = cos), color = "mediumpurple") +
    ylab("Polynomial Approximations to cos(x)") +
    xlab("x")
#+END_SRC

On exercise 8
